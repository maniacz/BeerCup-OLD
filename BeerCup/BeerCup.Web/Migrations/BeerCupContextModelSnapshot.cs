// <auto-generated />
using System;
using BeerCup.Web.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeerCup.Web.Migrations
{
    [DbContext(typeof(BeerCupContext))]
    partial class BeerCupContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BeerCup.Web.Database.Entities.Battle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BattleEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BattleStartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("BattleStyle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("BeerCup.Web.Database.Entities.BattleVote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BattleId")
                        .HasColumnType("int");

                    b.Property<int>("BeerNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("CTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("VoterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BattlesVotes");
                });

            modelBuilder.Entity("BeerCup.Web.Database.Entities.Brewery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BreweryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BreweryOwner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Breweries");
                });

            modelBuilder.Entity("BeerCup.Web.Database.Entities.BreweryBattle", b =>
                {
                    b.Property<int>("BreweryId")
                        .HasColumnType("int");

                    b.Property<int>("BattleId")
                        .HasColumnType("int");

                    b.Property<int>("FinalRank")
                        .HasColumnType("int");

                    b.Property<int>("VotesReceived")
                        .HasColumnType("int");

                    b.HasKey("BreweryId", "BattleId");

                    b.HasIndex("BattleId");

                    b.ToTable("BattlesResults");
                });

            modelBuilder.Entity("BeerCup.Web.Database.Entities.CurrentBattle", b =>
                {
                    b.Property<string>("Lock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValue("X");

                    b.Property<int>("BattleId")
                        .HasColumnType("int");

                    b.HasKey("Lock");

                    b.ToTable("CurrentBattle");

                    b.HasCheckConstraint("CK_T1_Locked", "[Lock]='X'");
                });

            modelBuilder.Entity("BeerCup.Web.Database.Entities.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BeerCup.Web.Database.Entities.BreweryBattle", b =>
                {
                    b.HasOne("BeerCup.Web.Database.Entities.Battle", null)
                        .WithMany("BreweryBattles")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeerCup.Web.Database.Entities.Brewery", null)
                        .WithMany("BreweryBattles")
                        .HasForeignKey("BreweryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
